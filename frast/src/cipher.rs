use sha3::{Shake256, digest::{Update, ExtendableOutput, XofReader}};
use crate::MODULUS;

pub struct FrastParam {
    pub round: usize,
    pub num_branches: usize,
    pub num_rand_round: usize,
    pub num_fixed_round: usize,
}

pub const FRAST_PARAM: FrastParam = FrastParam {
    round: 40,
    num_branches: 32,
    num_rand_round: 32,
    num_fixed_round: 8,
};

pub const FRAST_SBOX: &[u8] = &[0, 3, 5, 8, 6, 9, 12, 7, 13, 10, 14, 4, 1, 15, 11, 2];

pub struct Frast {
    key: Vec::<u8>,
    round_key: Vec::<Vec::<u8>>,
    nonce: u64,
    counter: u64,
    sboxes: Vec::<Vec::<u8>>,
}

impl Frast {
    pub fn new(master_key: &[u8]) -> Frast {
        let mut key: Vec<u8> = Vec::with_capacity(2 * FRAST_PARAM.num_branches);
        for key_val in master_key.iter() {
            key.push(key_val.clone());
        }
        let round_key: Vec::<Vec::<u8>> = Vec::with_capacity(FRAST_PARAM.round + 1);
        let sboxes: Vec::<Vec::<u8>> = Vec::new();

        let mut frast = Frast {
            key: key,
            round_key: round_key,
            nonce: 0u64,
            counter: 0u64,
            sboxes: sboxes,
        };
        frast.keyschedule();

        frast
    }

    pub fn set_nonce(&mut self, nonce: &u64) {
        self.nonce = *nonce;
    }

    pub fn set_counter(&mut self, counter: &u64) {
        self.counter = *counter;
    }

    pub fn generate_keystream_block(&mut self) -> Vec<u8> {
        self.generate_sboxes();
        self.counter = self.counter + 1;

        let mut state: Vec<u8> = (0..FRAST_PARAM.num_branches).map(|x| (x % MODULUS) as u8).collect();
        for r in 0..FRAST_PARAM.round {
            let mut sbox_erf = vec![0u8; MODULUS];
            let mut sbox_crf = vec![0u8; MODULUS];

            if r % 5 < 4 {
                for i in 0..MODULUS/2 {
                    sbox_erf[i] = self.sboxes[r][i];
                    sbox_erf[MODULUS/2 + i] = (MODULUS as u8 - sbox_erf[i]) % MODULUS as u8;

                    sbox_crf[i] = self.sboxes[r][MODULUS/2 + i];
                    sbox_crf[MODULUS/2 + i] = (MODULUS as u8 - sbox_crf[i]) % MODULUS as u8;
                }
            } else {
                for i in 0..MODULUS {
                    sbox_erf[i] = self.sboxes[r][i];
                    sbox_crf[i] = self.sboxes[r][i];
                }
            }
            let mut lin_sum = 0u8;
            for i in 1..FRAST_PARAM.num_branches {
                let sbox_in = ((state[0] + self.round_key[r][i]) as usize) % MODULUS;
                state[i] += sbox_erf[sbox_in];
                state[i] %= 16;
                lin_sum += state[i];
            }
            lin_sum += self.round_key[r][0];
            lin_sum %= MODULUS as u8;
            state[0] += sbox_crf[lin_sum as usize];
            state[0] %= MODULUS as u8;
        }

        state
    }

    pub fn get_sbox(&self, round: usize) -> &Vec::<u8> {
        debug_assert!(round <= FRAST_PARAM.round);
        &self.sboxes[round]
    }

    pub fn get_round_key(&self, round: usize) -> &Vec::<u8> {
        debug_assert!(round <= FRAST_PARAM.round);
        &self.round_key[round]
    }

    fn keyschedule(&mut self) {
        let num_mat_mul = (FRAST_PARAM.round / 2) + (FRAST_PARAM.round % 2);
        let mut cur_round_key = self.key.clone();
        for _ in 0..num_mat_mul {
            let mut next_round_key = Vec::<u8>::with_capacity(2 * FRAST_PARAM.num_branches);
            for mat_row in ROUND_KEY_MAT.iter() {
                let mut val = 0;
                for (mat_elem, cur_round_key_elem) in mat_row.iter().zip(cur_round_key.iter()) {
                    val += mat_elem * cur_round_key_elem;
                }
                next_round_key.push(val % (MODULUS as u8));
            }
            self.round_key.push(next_round_key[0..FRAST_PARAM.num_branches].to_vec());
            self.round_key.push(next_round_key[FRAST_PARAM.num_branches..2*FRAST_PARAM.num_branches].to_vec());

            cur_round_key = next_round_key.clone();
        }
    }

    fn generate_sboxes(&mut self) {
        let mut shake = Shake256::default();
        let nonce_byte = u64::to_le_bytes(self.nonce);
        let counter_byte = u64::to_le_bytes(self.counter);

        shake.update(&nonce_byte);
        shake.update(&counter_byte);
        let mut xof = shake.finalize_xof();

        let mut xof_buffer = vec![0u8; FRAST_PARAM.num_rand_round * 8];
        xof.read(xof_buffer.as_mut_slice());
        let mut offset = 0;

        self.sboxes = Vec::new();
        for r in 0..FRAST_PARAM.round {
            let mut cur_sbox = Vec::with_capacity(MODULUS);
            if r % 5 < 4 {
                for j in 0..8 {
                    let val = xof_buffer[offset + j];

                    cur_sbox.push((val & 0xf) as u8);
                    cur_sbox.push((val >> 4) as u8);
                }
                offset += 8;
            } else {
                cur_sbox = FRAST_SBOX.to_vec();
            }
            self.sboxes.push(cur_sbox);
        }
    }
}

pub const ROUND_KEY_MAT: [[u8; 2 * FRAST_PARAM.num_branches]; 2 * FRAST_PARAM.num_branches] = [
    [0x1, 0x2, 0x3, 0xe, 0x2, 0xd, 0x4, 0xf, 0x0, 0xa, 0x6, 0x8, 0xb, 0xe, 0xf, 0xe, 0x1, 0xb, 0x7, 0xd, 0x2, 0xa, 0x8, 0xa, 0x8, 0x5, 0x8, 0xa, 0x0, 0x1, 0x1, 0xc, 0xc, 0x4, 0xf, 0x7, 0x5, 0x0, 0x7, 0x4, 0xa, 0x6, 0x1, 0x1, 0x2, 0x8, 0x7, 0x4, 0x9, 0x7, 0x4, 0xe, 0xa, 0x0, 0xe, 0xd, 0x3, 0xf, 0x0, 0x0, 0x3, 0xe, 0x9, 0x7],
    [0x7, 0x8, 0xc, 0x9, 0xa, 0x6, 0xc, 0xa, 0x9, 0xa, 0xf, 0x3, 0x3, 0x7, 0xf, 0x6, 0xc, 0x1, 0x6, 0xd, 0x9, 0xb, 0x8, 0xd, 0x9, 0x6, 0x5, 0x1, 0x7, 0x9, 0x0, 0xa, 0x6, 0x7, 0x2, 0xa, 0xf, 0xf, 0x5, 0xa, 0x4, 0xd, 0xd, 0xf, 0x5, 0xe, 0xf, 0x5, 0x3, 0x8, 0x0, 0x1, 0xe, 0x5, 0x5, 0xd, 0x7, 0x1, 0x1, 0x1, 0x1, 0xa, 0x3, 0xa],
    [0x6, 0x8, 0x8, 0xb, 0x7, 0x6, 0x9, 0x1, 0xe, 0x9, 0x5, 0x8, 0x4, 0x0, 0x4, 0x4, 0x3, 0x7, 0xe, 0xf, 0x1, 0x1, 0x9, 0x0, 0xb, 0x8, 0x4, 0xa, 0xa, 0xe, 0x2, 0xa, 0x2, 0x8, 0x9, 0xc, 0xe, 0x0, 0xa, 0xe, 0xf, 0xf, 0x6, 0xd, 0xd, 0xd, 0xe, 0x8, 0x8, 0x9, 0x9, 0xe, 0x9, 0xd, 0xb, 0x7, 0x3, 0x7, 0x7, 0x0, 0xb, 0xf, 0xb, 0x0],
    [0xb, 0x9, 0xd, 0xf, 0xd, 0x3, 0xa, 0xd, 0x6, 0x3, 0x5, 0x0, 0xb, 0x7, 0xb, 0x6, 0x8, 0xb, 0x5, 0x9, 0x2, 0x4, 0x9, 0x6, 0x8, 0x1, 0x9, 0x3, 0x9, 0xd, 0xe, 0xa, 0x0, 0x7, 0xd, 0x3, 0xe, 0x1, 0x8, 0x9, 0x7, 0x0, 0x5, 0x2, 0x9, 0x8, 0x9, 0xf, 0x6, 0x5, 0x1, 0xd, 0x8, 0xf, 0x9, 0x0, 0x2, 0xc, 0xb, 0xd, 0x2, 0xe, 0x6, 0xd],
    [0xd, 0x8, 0x8, 0xb, 0xe, 0xf, 0xa, 0x6, 0x7, 0x2, 0xf, 0x8, 0x9, 0xf, 0x4, 0x8, 0xa, 0xe, 0x8, 0x8, 0x2, 0x7, 0xa, 0xf, 0xb, 0x8, 0xc, 0x5, 0x7, 0x3, 0x5, 0x0, 0xd, 0x0, 0x5, 0xd, 0x4, 0x4, 0xf, 0x0, 0x9, 0xf, 0x8, 0x5, 0x8, 0xf, 0xf, 0xb, 0x3, 0x0, 0x9, 0xc, 0x3, 0x3, 0xe, 0x4, 0xf, 0xc, 0xb, 0xc, 0x2, 0xb, 0x7, 0xc],
    [0x3, 0x3, 0x9, 0x0, 0xd, 0x1, 0xa, 0x5, 0x9, 0xb, 0xb, 0xc, 0x7, 0x3, 0x4, 0x5, 0xf, 0x6, 0x1, 0x7, 0xd, 0xd, 0x5, 0xd, 0x1, 0xd, 0x2, 0x4, 0x2, 0xb, 0x7, 0xc, 0xa, 0x5, 0xd, 0x5, 0x9, 0xf, 0xb, 0x2, 0x3, 0x7, 0xc, 0x2, 0x8, 0xe, 0x9, 0x1, 0xa, 0x4, 0xd, 0x1, 0xd, 0x9, 0xe, 0x0, 0x3, 0xa, 0xa, 0x5, 0x2, 0x6, 0xa, 0xc],
    [0xc, 0xf, 0x0, 0x1, 0xa, 0x1, 0x1, 0x4, 0x3, 0x7, 0x7, 0x9, 0xc, 0xd, 0xc, 0xa, 0x5, 0xa, 0x2, 0xd, 0x9, 0x0, 0x9, 0x1, 0x4, 0x4, 0xd, 0xa, 0xd, 0x7, 0x7, 0x7, 0xa, 0x5, 0xf, 0x1, 0xb, 0xd, 0xf, 0x1, 0x0, 0xd, 0x0, 0xb, 0x4, 0x3, 0x5, 0x5, 0xb, 0x4, 0x6, 0x9, 0x5, 0x0, 0xa, 0xe, 0xa, 0x6, 0x8, 0x1, 0x0, 0xc, 0x2, 0x8],
    [0x5, 0x4, 0xd, 0xb, 0x8, 0xd, 0x1, 0x6, 0xb, 0x8, 0x7, 0x8, 0x5, 0x9, 0x5, 0xf, 0x0, 0x9, 0xa, 0xa, 0xa, 0x5, 0x5, 0x6, 0x9, 0x2, 0x9, 0x3, 0xf, 0x1, 0xe, 0x1, 0x6, 0x4, 0x5, 0x3, 0x9, 0x2, 0x3, 0xd, 0xd, 0x9, 0xd, 0x6, 0x3, 0x9, 0xd, 0xf, 0x6, 0x9, 0x0, 0xd, 0x5, 0x4, 0x5, 0xc, 0xb, 0x3, 0x4, 0xe, 0xb, 0x2, 0x8, 0x7],
    [0xe, 0x3, 0x3, 0xd, 0x6, 0x9, 0xf, 0xe, 0x8, 0x0, 0xa, 0xd, 0xf, 0xd, 0x1, 0x8, 0xb, 0x1, 0x6, 0xf, 0x0, 0x8, 0x8, 0x5, 0xc, 0xe, 0x5, 0xa, 0x8, 0x3, 0xe, 0x2, 0xc, 0xf, 0x0, 0x8, 0xa, 0x3, 0x5, 0xd, 0x7, 0x8, 0x5, 0xc, 0x2, 0x2, 0x7, 0x5, 0x5, 0xa, 0x2, 0xa, 0xe, 0xe, 0x0, 0x3, 0xc, 0x5, 0x3, 0x6, 0x4, 0xd, 0x1, 0x9],
    [0x7, 0x7, 0x3, 0x3, 0xb, 0x2, 0x7, 0x0, 0x8, 0xe, 0xf, 0x2, 0x2, 0x7, 0x1, 0x9, 0xa, 0x8, 0x8, 0x6, 0xe, 0xf, 0x7, 0xe, 0x8, 0x3, 0x9, 0x0, 0x9, 0xf, 0xb, 0xf, 0xf, 0x6, 0xa, 0xd, 0x1, 0x2, 0x2, 0xe, 0x0, 0x8, 0xd, 0x8, 0x7, 0x6, 0x6, 0x4, 0x6, 0xf, 0x8, 0x5, 0xc, 0xa, 0x5, 0xe, 0x7, 0x3, 0x7, 0xa, 0x9, 0x7, 0x8, 0x4],
    [0x6, 0xb, 0x5, 0x6, 0xd, 0xd, 0xa, 0x7, 0x5, 0xf, 0xa, 0x6, 0x6, 0x4, 0xd, 0x4, 0x5, 0xb, 0x8, 0xe, 0xe, 0xd, 0x9, 0x8, 0xb, 0xf, 0xc, 0x1, 0x0, 0xa, 0xa, 0x0, 0xa, 0x7, 0x3, 0xc, 0x7, 0x5, 0x6, 0xb, 0x2, 0x8, 0x2, 0x6, 0xc, 0x8, 0x8, 0xa, 0x5, 0x7, 0x3, 0x4, 0xb, 0xe, 0xb, 0x6, 0xd, 0x4, 0x5, 0x8, 0xa, 0x6, 0x3, 0x5],
    [0x7, 0xc, 0x7, 0x6, 0x4, 0xe, 0x4, 0xe, 0xe, 0x7, 0xe, 0xa, 0x4, 0x1, 0xd, 0x2, 0xa, 0xb, 0x2, 0xe, 0x5, 0x2, 0xe, 0x6, 0x5, 0xd, 0xa, 0xe, 0x1, 0x2, 0x5, 0x8, 0x6, 0x3, 0x3, 0xf, 0xa, 0xb, 0x9, 0xf, 0x9, 0x8, 0x2, 0x4, 0xe, 0xe, 0xd, 0xa, 0x7, 0x4, 0x6, 0x1, 0xb, 0xd, 0x1, 0xe, 0x5, 0xd, 0x9, 0xd, 0x5, 0xd, 0xf, 0xa],
    [0x2, 0x7, 0x4, 0x9, 0x2, 0x9, 0xe, 0x4, 0x6, 0x5, 0xb, 0x0, 0x9, 0xf, 0x0, 0x9, 0x6, 0xa, 0x8, 0x9, 0x0, 0x8, 0x5, 0x3, 0x5, 0x0, 0x5, 0xf, 0x4, 0x4, 0x2, 0x2, 0xe, 0x7, 0x3, 0x2, 0xd, 0x3, 0x4, 0xc, 0xc, 0x6, 0xa, 0xd, 0x1, 0x1, 0xd, 0xf, 0x6, 0xb, 0x9, 0xa, 0x3, 0x1, 0x8, 0x8, 0x3, 0x4, 0x5, 0x6, 0x7, 0x9, 0x8, 0x1],
    [0x4, 0x3, 0xf, 0x4, 0x5, 0x4, 0x5, 0x9, 0xc, 0x7, 0xe, 0xb, 0x5, 0x3, 0x1, 0x1, 0x8, 0x1, 0xf, 0x9, 0x0, 0x6, 0x9, 0x7, 0x7, 0x2, 0x1, 0x0, 0x6, 0xb, 0x4, 0x7, 0x0, 0x0, 0xa, 0x1, 0x4, 0x2, 0x6, 0x4, 0x3, 0x7, 0x8, 0xd, 0x8, 0xa, 0x1, 0x1, 0x8, 0x8, 0xc, 0x5, 0x1, 0x9, 0x4, 0x4, 0x4, 0xd, 0xc, 0x4, 0x1, 0x2, 0xb, 0x4],
    [0x5, 0x6, 0x0, 0x3, 0x0, 0xb, 0xb, 0x6, 0x4, 0xd, 0x3, 0xe, 0x5, 0x1, 0xe, 0x6, 0x9, 0xa, 0x5, 0x2, 0xd, 0x0, 0xe, 0x6, 0xd, 0x8, 0x3, 0x5, 0xf, 0xb, 0x6, 0xf, 0xd, 0xe, 0x7, 0x1, 0x1, 0x9, 0x0, 0xf, 0xe, 0x0, 0x9, 0x9, 0x0, 0xc, 0x5, 0x0, 0x5, 0x0, 0x6, 0x2, 0x6, 0x9, 0xb, 0x4, 0xf, 0xb, 0x5, 0x3, 0xc, 0x5, 0x0, 0xe],
    [0x8, 0xe, 0xc, 0xe, 0xc, 0xe, 0x7, 0x3, 0xc, 0xa, 0xf, 0x1, 0xf, 0x4, 0x2, 0xa, 0x3, 0x1, 0x1, 0xe, 0xd, 0x4, 0x9, 0x0, 0x3, 0x8, 0x8, 0xe, 0x6, 0x2, 0xf, 0x5, 0xf, 0x5, 0x1, 0xb, 0x8, 0x7, 0x8, 0xd, 0x1, 0xa, 0xd, 0x2, 0xc, 0x3, 0xc, 0xf, 0x4, 0x9, 0x0, 0x9, 0x1, 0xb, 0x9, 0x7, 0xe, 0x7, 0x7, 0x1, 0x4, 0x2, 0x8, 0xd],
    [0xf, 0x7, 0x9, 0x8, 0xb, 0x7, 0x7, 0x8, 0x0, 0xd, 0x3, 0x5, 0x2, 0x8, 0x2, 0x2, 0x3, 0xe, 0x6, 0x4, 0x5, 0x7, 0x7, 0xa, 0x4, 0xe, 0x9, 0x3, 0x0, 0x6, 0x7, 0xb, 0xd, 0x7, 0x0, 0xb, 0x9, 0x4, 0xc, 0x5, 0x6, 0x3, 0xc, 0xa, 0xa, 0x1, 0xb, 0x0, 0x2, 0x8, 0x4, 0x3, 0x9, 0x4, 0x2, 0xc, 0x7, 0xe, 0xa, 0xb, 0x2, 0xe, 0x0, 0xd],
    [0x8, 0x8, 0x2, 0x0, 0x8, 0xa, 0x4, 0x7, 0xb, 0xd, 0x7, 0x3, 0x4, 0x8, 0xf, 0xd, 0x3, 0x7, 0x1, 0x1, 0xd, 0xc, 0x6, 0x3, 0xf, 0xa, 0x4, 0xb, 0x5, 0x1, 0xc, 0x3, 0xc, 0x7, 0x8, 0xa, 0x1, 0x2, 0x4, 0xf, 0x1, 0x4, 0x7, 0xf, 0x1, 0x3, 0xa, 0xe, 0xc, 0xa, 0xe, 0x3, 0x8, 0xd, 0xc, 0xa, 0xe, 0xc, 0x6, 0x4, 0x3, 0x4, 0xc, 0x6],
    [0x4, 0xb, 0xd, 0x7, 0x2, 0x8, 0x7, 0x6, 0xc, 0xa, 0x5, 0xd, 0xf, 0x8, 0x7, 0x6, 0xa, 0x9, 0x0, 0x9, 0x6, 0x5, 0x4, 0x2, 0x9, 0xc, 0x5, 0x9, 0x1, 0x9, 0x0, 0x4, 0xb, 0xc, 0xd, 0xc, 0x4, 0x6, 0xb, 0x2, 0x4, 0x7, 0x2, 0xc, 0xa, 0x6, 0xa, 0x8, 0xa, 0x5, 0xa, 0x8, 0xa, 0x7, 0x1, 0x6, 0x1, 0x1, 0xf, 0xc, 0x3, 0xa, 0x3, 0x8],
    [0x8, 0x1, 0x1, 0x4, 0x5, 0xd, 0x6, 0x8, 0x8, 0x1, 0x7, 0x5, 0xa, 0x6, 0x1, 0x1, 0x9, 0x5, 0x9, 0x4, 0x0, 0xf, 0xa, 0x8, 0x6, 0x3, 0x9, 0x8, 0xe, 0x5, 0xb, 0x1, 0x8, 0xf, 0x2, 0x0, 0x9, 0x5, 0x9, 0x5, 0x1, 0x7, 0x9, 0x4, 0x5, 0x4, 0x7, 0x0, 0x9, 0xa, 0xe, 0xa, 0xd, 0xe, 0x1, 0xe, 0x0, 0x2, 0x0, 0x6, 0x7, 0x3, 0x1, 0xa],
    [0x5, 0x0, 0x5, 0x6, 0x6, 0x8, 0x4, 0xd, 0xc, 0x7, 0xd, 0x6, 0x5, 0x9, 0x8, 0x5, 0x1, 0x1, 0xe, 0x9, 0xa, 0x6, 0x7, 0xf, 0x5, 0xf, 0x1, 0x3, 0x1, 0xf, 0x1, 0x1, 0xe, 0x0, 0x9, 0x6, 0x7, 0x5, 0x4, 0xf, 0xc, 0x7, 0xf, 0xd, 0x9, 0x9, 0x2, 0xf, 0x0, 0xc, 0x9, 0x4, 0x2, 0x8, 0x1, 0x2, 0x1, 0xc, 0x2, 0xc, 0xa, 0xb, 0x5, 0x5],
    [0x8, 0x0, 0x4, 0x5, 0xc, 0xd, 0x6, 0xa, 0x5, 0x1, 0xf, 0x8, 0x7, 0x9, 0xe, 0x0, 0xa, 0xd, 0x1, 0xf, 0xa, 0xc, 0x4, 0x1, 0xe, 0xb, 0x4, 0x9, 0x3, 0x5, 0xf, 0x5, 0x3, 0x9, 0x3, 0xd, 0x6, 0x4, 0xc, 0x4, 0x1, 0x7, 0x0, 0xb, 0x4, 0x1, 0x3, 0xd, 0xe, 0x2, 0x1, 0xa, 0x6, 0x8, 0x6, 0x2, 0xa, 0x1, 0x6, 0x2, 0xd, 0x5, 0xc, 0x8],
    [0x8, 0x1, 0xc, 0x6, 0x3, 0x9, 0x0, 0x3, 0x3, 0xf, 0x9, 0x8, 0xb, 0x8, 0x5, 0xf, 0x1, 0xb, 0x0, 0xd, 0xa, 0x2, 0x1, 0xc, 0x2, 0x3, 0x5, 0x9, 0x7, 0x1, 0xe, 0x1, 0x3, 0x2, 0x9, 0xc, 0x7, 0xb, 0xb, 0xc, 0xa, 0x5, 0x5, 0x5, 0xd, 0x3, 0xd, 0x9, 0x4, 0x8, 0xf, 0xb, 0x8, 0xe, 0xc, 0x7, 0x8, 0x8, 0xf, 0x2, 0xe, 0xa, 0x9, 0x2],
    [0xd, 0x9, 0x0, 0x0, 0x2, 0x9, 0x7, 0xf, 0xa, 0xd, 0x1, 0xb, 0xe, 0x4, 0xe, 0xc, 0x5, 0xc, 0x1, 0xb, 0x9, 0x4, 0x1, 0xe, 0x4, 0x8, 0x6, 0xa, 0xd, 0x8, 0xd, 0x2, 0x3, 0x7, 0x8, 0xa, 0xb, 0x5, 0x1, 0x5, 0x0, 0xc, 0x3, 0x1, 0x4, 0x4, 0x4, 0x6, 0x6, 0x5, 0xe, 0xd, 0xa, 0x7, 0x8, 0x6, 0x4, 0x0, 0x7, 0xf, 0xa, 0xf, 0xb, 0xe],
    [0x8, 0x0, 0xd, 0xe, 0xc, 0xc, 0xa, 0xf, 0xb, 0x5, 0xd, 0xb, 0x0, 0x8, 0x3, 0x1, 0x6, 0x3, 0xd, 0x0, 0x5, 0x0, 0x8, 0x5, 0x9, 0xd, 0xf, 0x8, 0x3, 0x0, 0x0, 0x1, 0x7, 0x9, 0x5, 0x3, 0xc, 0x9, 0xe, 0x3, 0x9, 0xb, 0xb, 0x3, 0xa, 0xc, 0x1, 0xf, 0x0, 0xa, 0xf, 0x1, 0x4, 0xd, 0x5, 0x1, 0x9, 0x5, 0x3, 0x8, 0xd, 0x1, 0x6, 0xf],
    [0x2, 0xd, 0xd, 0xb, 0xb, 0x2, 0xa, 0xf, 0x6, 0x3, 0x7, 0xf, 0x1, 0x7, 0xc, 0x6, 0x7, 0xf, 0xf, 0x5, 0xe, 0xc, 0xe, 0xe, 0x1, 0x5, 0x1, 0xe, 0xd, 0xd, 0xe, 0x0, 0x7, 0xa, 0x3, 0xc, 0xc, 0xc, 0xf, 0xe, 0xe, 0x1, 0xc, 0xe, 0x6, 0x1, 0x0, 0xe, 0xf, 0x8, 0x4, 0x3, 0xd, 0x6, 0xf, 0x1, 0x3, 0x1, 0x5, 0x0, 0x2, 0x8, 0x1, 0x2],
    [0x1, 0x3, 0xb, 0xb, 0x3, 0xc, 0x0, 0xc, 0x3, 0x8, 0x9, 0xe, 0x5, 0xd, 0x1, 0xb, 0x6, 0x4, 0xe, 0x5, 0x1, 0xb, 0xe, 0xc, 0xd, 0x6, 0xb, 0x1, 0xa, 0x7, 0xe, 0xc, 0x8, 0x0, 0xb, 0xa, 0x1, 0x3, 0xe, 0xa, 0xc, 0x4, 0xd, 0x9, 0x0, 0xa, 0x8, 0x1, 0xc, 0x8, 0x7, 0xa, 0x3, 0x1, 0x6, 0x4, 0x2, 0x5, 0x2, 0x4, 0x9, 0xb, 0x7, 0xf],
    [0xb, 0xd, 0x2, 0xd, 0xe, 0x0, 0xf, 0x7, 0x1, 0x7, 0xc, 0xf, 0x1, 0xd, 0x7, 0x1, 0x3, 0x4, 0x3, 0x0, 0xd, 0xa, 0x2, 0x0, 0xf, 0xc, 0x4, 0xb, 0x4, 0x2, 0x5, 0xe, 0xc, 0x4, 0x8, 0x2, 0xa, 0x7, 0x9, 0xe, 0xf, 0x9, 0xb, 0x3, 0x6, 0x0, 0xf, 0x9, 0xe, 0x5, 0x5, 0xb, 0x7, 0x1, 0xd, 0xb, 0xd, 0x4, 0x4, 0xa, 0xd, 0x6, 0xf, 0x4],
    [0xd, 0x1, 0x6, 0x2, 0x2, 0x1, 0xd, 0x2, 0x1, 0xe, 0x6, 0x8, 0x8, 0x9, 0xf, 0x3, 0xd, 0x4, 0x6, 0x6, 0x6, 0xf, 0x7, 0x3, 0x5, 0xa, 0xa, 0x2, 0xc, 0xa, 0x9, 0xb, 0xf, 0x0, 0x2, 0xa, 0xd, 0xe, 0xe, 0x1, 0x5, 0x3, 0xc, 0xd, 0x7, 0x9, 0xd, 0x6, 0x4, 0xc, 0xd, 0x3, 0x0, 0x7, 0x0, 0x1, 0x5, 0xe, 0xa, 0xb, 0x8, 0x3, 0x6, 0xa],
    [0x3, 0x1, 0xd, 0x2, 0x6, 0x5, 0x0, 0x0, 0xd, 0x3, 0x0, 0x5, 0xb, 0x0, 0xe, 0xc, 0x4, 0x8, 0xa, 0x6, 0x8, 0x1, 0xa, 0xb, 0xa, 0x0, 0xd, 0xe, 0x1, 0xa, 0x5, 0x1, 0xb, 0x4, 0x4, 0x3, 0x3, 0xc, 0x2, 0xd, 0x5, 0x0, 0xf, 0x1, 0x9, 0xe, 0x7, 0x4, 0xd, 0xf, 0xf, 0x7, 0x2, 0xd, 0x2, 0xe, 0x4, 0x1, 0x4, 0x7, 0xa, 0x6, 0x5, 0x5],
    [0x6, 0x4, 0xf, 0x9, 0x7, 0xf, 0xf, 0x5, 0xd, 0xd, 0xf, 0x7, 0x7, 0xe, 0xc, 0xc, 0x9, 0xa, 0xf, 0x0, 0xb, 0x9, 0xa, 0x1, 0x6, 0x9, 0x1, 0x5, 0x8, 0xf, 0xb, 0xa, 0x7, 0x4, 0x9, 0x2, 0x8, 0xa, 0xd, 0x5, 0xa, 0xd, 0x8, 0x2, 0x6, 0x2, 0xd, 0xd, 0x3, 0x0, 0x0, 0x7, 0x4, 0x1, 0xd, 0x8, 0xa, 0xe, 0x6, 0x8, 0x6, 0x5, 0x5, 0x1],
    [0x5, 0xe, 0x9, 0x4, 0xa, 0x5, 0x6, 0xc, 0xc, 0x8, 0x6, 0x4, 0x3, 0xd, 0xe, 0xc, 0x5, 0x8, 0xd, 0xf, 0x4, 0x6, 0x0, 0x5, 0xb, 0xc, 0xb, 0xe, 0x2, 0xe, 0x1, 0x5, 0x5, 0x6, 0x4, 0xb, 0xd, 0x2, 0xb, 0x5, 0x9, 0x7, 0x3, 0x5, 0xe, 0xf, 0xb, 0xa, 0xb, 0x6, 0xe, 0xc, 0x7, 0xb, 0x0, 0x9, 0x5, 0x5, 0xe, 0x3, 0xc, 0x2, 0x4, 0xa],
    [0x6, 0xc, 0x5, 0xb, 0xc, 0xd, 0x3, 0x5, 0xd, 0xd, 0x8, 0x2, 0xe, 0xb, 0xa, 0x1, 0x4, 0x2, 0x1, 0xf, 0x9, 0x8, 0x5, 0x3, 0x2, 0x4, 0x0, 0x9, 0x2, 0xa, 0xc, 0xb, 0x1, 0x9, 0x0, 0x7, 0x3, 0x9, 0x9, 0x5, 0x6, 0xc, 0x8, 0x6, 0x3, 0x9, 0x9, 0xf, 0x1, 0xb, 0xd, 0xc, 0xf, 0x1, 0xd, 0x0, 0x6, 0x0, 0xa, 0x8, 0xf, 0x5, 0x8, 0x3],
    [0x3, 0x2, 0xb, 0x4, 0x3, 0xd, 0x7, 0xd, 0x4, 0x5, 0x6, 0xa, 0x8, 0x2, 0xb, 0x3, 0x8, 0xc, 0xb, 0x0, 0x9, 0xb, 0x1, 0xa, 0xf, 0x9, 0xb, 0x1, 0xa, 0x9, 0x2, 0x7, 0x9, 0x3, 0x4, 0xb, 0x8, 0xa, 0xb, 0xb, 0x1, 0x1, 0x2, 0x0, 0xe, 0x4, 0x8, 0xc, 0x1, 0x8, 0x2, 0x3, 0xb, 0xb, 0x3, 0xc, 0xe, 0x4, 0x1, 0xb, 0xc, 0x3, 0xe, 0x6],
    [0x6, 0x7, 0xe, 0xf, 0x8, 0x9, 0x4, 0xf, 0x2, 0xd, 0x1, 0xc, 0x9, 0x6, 0x5, 0x2, 0x5, 0xa, 0x8, 0x3, 0x1, 0x3, 0xf, 0xc, 0xa, 0xe, 0x3, 0xe, 0xa, 0x3, 0x2, 0x3, 0xf, 0x7, 0x6, 0x7, 0x6, 0xa, 0x0, 0x2, 0xd, 0x5, 0xc, 0x7, 0x7, 0x2, 0x7, 0x6, 0xa, 0x6, 0x2, 0xa, 0x9, 0x0, 0x8, 0x4, 0xa, 0x3, 0x5, 0x1, 0x7, 0x1, 0xf, 0x8],
    [0x6, 0xd, 0x9, 0x1, 0xf, 0xb, 0x6, 0xe, 0xc, 0x0, 0x5, 0xb, 0x7, 0xe, 0xb, 0xf, 0x0, 0x2, 0x3, 0xc, 0xc, 0x5, 0xf, 0x1, 0x9, 0x4, 0xc, 0x8, 0x9, 0x2, 0x5, 0x2, 0xa, 0x1, 0xa, 0x7, 0xc, 0x5, 0x7, 0xa, 0x2, 0x3, 0xf, 0xe, 0xd, 0x8, 0x4, 0x8, 0x0, 0x1, 0xc, 0x9, 0xa, 0xa, 0x8, 0x7, 0x3, 0x0, 0xd, 0xa, 0xf, 0x1, 0xd, 0x3],
    [0xc, 0x2, 0x2, 0xe, 0xa, 0x0, 0x3, 0xa, 0x5, 0xe, 0x7, 0x7, 0xa, 0x6, 0x2, 0xe, 0x7, 0xa, 0x9, 0x3, 0x8, 0xd, 0x4, 0x3, 0xb, 0x3, 0xa, 0xa, 0x3, 0xa, 0x2, 0xa, 0xf, 0xb, 0x6, 0x8, 0x1, 0xf, 0xe, 0x7, 0xb, 0xb, 0xb, 0x5, 0x8, 0x5, 0xa, 0x3, 0xd, 0x0, 0xa, 0x1, 0x3, 0xf, 0x4, 0xa, 0xb, 0xf, 0xe, 0xb, 0x7, 0x2, 0x3, 0x5],
    [0x8, 0xd, 0x1, 0xb, 0x6, 0xb, 0x3, 0x4, 0x1, 0x4, 0x1, 0xa, 0x0, 0x6, 0x8, 0x1, 0xf, 0x9, 0x8, 0x4, 0xa, 0x3, 0xc, 0x1, 0xa, 0x5, 0x3, 0x1, 0xa, 0x3, 0xf, 0x8, 0x9, 0xb, 0x9, 0x0, 0xc, 0xa, 0x8, 0xf, 0x9, 0x5, 0x0, 0x0, 0xe, 0xe, 0x3, 0x4, 0xc, 0x6, 0xb, 0xa, 0x1, 0x5, 0xe, 0x3, 0xa, 0xe, 0x1, 0x0, 0x2, 0xa, 0x5, 0xa],
    [0x6, 0x8, 0xd, 0x0, 0xa, 0x5, 0x5, 0x0, 0x4, 0x7, 0x8, 0x3, 0x6, 0x3, 0xb, 0xc, 0x5, 0xf, 0x1, 0x8, 0x4, 0x7, 0x9, 0x8, 0xb, 0xd, 0x9, 0xe, 0xd, 0xa, 0x8, 0xb, 0xe, 0xa, 0xd, 0x7, 0xf, 0xa, 0x2, 0xd, 0xa, 0x1, 0xc, 0x8, 0xa, 0x0, 0x5, 0x1, 0x9, 0x0, 0x6, 0x1, 0x9, 0x6, 0x7, 0x6, 0x1, 0x3, 0x8, 0xa, 0x9, 0x2, 0x2, 0x0],
    [0xc, 0xc, 0x5, 0xd, 0x2, 0xc, 0x6, 0xe, 0x0, 0xf, 0xc, 0x0, 0x1, 0x7, 0xd, 0x5, 0x1, 0xd, 0xd, 0x5, 0x5, 0xf, 0x1, 0x5, 0x4, 0x8, 0x7, 0x5, 0x0, 0x5, 0xe, 0x6, 0xc, 0x8, 0xe, 0x4, 0x9, 0xc, 0x8, 0xd, 0x5, 0x2, 0x5, 0x4, 0x5, 0x5, 0x2, 0xb, 0xf, 0x9, 0x9, 0xe, 0x9, 0xf, 0x0, 0x2, 0x7, 0xa, 0x1, 0x5, 0x7, 0xd, 0x0, 0xd],
    [0xe, 0x4, 0x6, 0xd, 0x3, 0x6, 0x9, 0x5, 0x6, 0x7, 0xe, 0x8, 0x5, 0x7, 0x3, 0x0, 0xd, 0x6, 0x9, 0x8, 0x5, 0x0, 0xb, 0x5, 0xa, 0x6, 0x6, 0x3, 0x8, 0x1, 0xe, 0x8, 0xb, 0x3, 0x5, 0x1, 0x6, 0x8, 0x3, 0x3, 0x3, 0x3, 0xb, 0x7, 0x5, 0x0, 0x6, 0xa, 0xd, 0x2, 0xa, 0x7, 0x2, 0x5, 0x5, 0xb, 0x6, 0x4, 0xd, 0x7, 0x3, 0xd, 0x6, 0x2],
    [0x2, 0x8, 0xc, 0x5, 0x9, 0xe, 0x6, 0x8, 0x5, 0x5, 0x9, 0xe, 0xe, 0x7, 0x4, 0xa, 0x2, 0x8, 0xb, 0x0, 0x0, 0x4, 0x3, 0x1, 0x5, 0x6, 0x5, 0x3, 0xe, 0xe, 0x7, 0xb, 0x6, 0x0, 0x2, 0x0, 0x1, 0x1, 0x4, 0x1, 0x1, 0x1, 0x9, 0xb, 0xe, 0x7, 0xf, 0x6, 0xc, 0x9, 0xc, 0x5, 0xd, 0xb, 0x6, 0xa, 0x9, 0x4, 0x2, 0x6, 0xa, 0xa, 0x8, 0x4],
    [0xf, 0x8, 0xa, 0x6, 0x1, 0x9, 0xe, 0xe, 0x6, 0x7, 0xf, 0x0, 0x2, 0xc, 0x2, 0x8, 0x2, 0x4, 0x0, 0x7, 0x3, 0x1, 0x4, 0x2, 0x7, 0xc, 0x7, 0xa, 0x7, 0x3, 0x5, 0x1, 0x0, 0xd, 0xe, 0x9, 0x5, 0xc, 0x8, 0xd, 0x1, 0x4, 0xb, 0xd, 0x5, 0x3, 0x5, 0x6, 0x1, 0x5, 0x1, 0x2, 0x4, 0xf, 0x7, 0xf, 0x2, 0xe, 0xa, 0x2, 0x8, 0x5, 0x3, 0x6],
    [0x0, 0x8, 0xc, 0xc, 0x2, 0x6, 0x5, 0x5, 0xd, 0xa, 0xa, 0x1, 0x1, 0x6, 0x6, 0xa, 0x3, 0xe, 0x1, 0xe, 0x2, 0x7, 0xe, 0x4, 0xd, 0x3, 0x2, 0xe, 0x1, 0x9, 0x6, 0x4, 0xf, 0x4, 0x6, 0x6, 0x8, 0x9, 0x0, 0x6, 0x1, 0x0, 0x5, 0x7, 0x0, 0x4, 0xf, 0x1, 0x6, 0x6, 0x7, 0x4, 0xe, 0x0, 0x5, 0xf, 0x4, 0x5, 0x4, 0x6, 0x7, 0x4, 0xa, 0xc],
    [0x8, 0x2, 0x4, 0xb, 0x7, 0x7, 0xf, 0xb, 0x8, 0xe, 0xb, 0xa, 0xc, 0x0, 0xc, 0xf, 0xd, 0x6, 0xe, 0x5, 0x0, 0x1, 0xe, 0xb, 0xd, 0xd, 0x8, 0x3, 0x9, 0x9, 0xf, 0xf, 0xc, 0x6, 0xd, 0x3, 0xf, 0xd, 0xf, 0xa, 0xa, 0x2, 0x5, 0x2, 0xc, 0x5, 0x4, 0x6, 0xf, 0x0, 0x7, 0xb, 0x2, 0xf, 0xc, 0xb, 0x3, 0x2, 0x1, 0x1, 0xc, 0x4, 0x4, 0xb],
    [0x3, 0x3, 0x8, 0xe, 0xe, 0x3, 0xc, 0x9, 0xb, 0x9, 0x6, 0x4, 0xf, 0x4, 0x5, 0x8, 0x3, 0x6, 0x8, 0xb, 0x1, 0x2, 0xf, 0xb, 0x5, 0xd, 0xd, 0xa, 0x0, 0xa, 0x2, 0x1, 0xd, 0x7, 0x1, 0xb, 0x8, 0x2, 0x8, 0x9, 0x5, 0xf, 0x3, 0x4, 0x4, 0xc, 0x8, 0x4, 0xd, 0x7, 0x9, 0xa, 0x2, 0x0, 0x9, 0xd, 0x2, 0xa, 0x8, 0xa, 0x2, 0xe, 0x9, 0xe],
    [0x1, 0x1, 0xf, 0x8, 0x9, 0x5, 0xb, 0xc, 0xa, 0xa, 0x8, 0x2, 0x9, 0xa, 0x3, 0x5, 0x7, 0x6, 0x6, 0xa, 0x9, 0xd, 0xf, 0x7, 0x9, 0x8, 0xf, 0x7, 0x6, 0xf, 0xd, 0xb, 0x7, 0x5, 0xf, 0x5, 0x2, 0xa, 0xc, 0xf, 0x8, 0x4, 0x4, 0xb, 0x3, 0x8, 0xe, 0x2, 0x9, 0x8, 0x4, 0x3, 0xb, 0x3, 0xc, 0x4, 0xc, 0xb, 0xa, 0x6, 0x4, 0x1, 0xe, 0x0],
    [0x7, 0x6, 0xd, 0x3, 0x8, 0x6, 0x4, 0xe, 0xa, 0x6, 0x2, 0x5, 0xf, 0xa, 0x5, 0x1, 0x6, 0x2, 0xe, 0x9, 0x5, 0x4, 0xe, 0xe, 0x2, 0xe, 0x2, 0x1, 0xd, 0xe, 0x7, 0xd, 0x2, 0xb, 0x3, 0x1, 0xf, 0x5, 0xc, 0x2, 0xa, 0x8, 0x4, 0x8, 0xb, 0x0, 0x5, 0x5, 0xf, 0x9, 0xa, 0x8, 0xd, 0x2, 0xc, 0xe, 0x3, 0xc, 0x4, 0xd, 0x6, 0x0, 0x2, 0xa],
    [0x8, 0xd, 0x2, 0xf, 0x7, 0x9, 0x9, 0x9, 0x2, 0x1, 0x6, 0xb, 0xb, 0x4, 0xc, 0xc, 0xb, 0x0, 0xa, 0xb, 0x4, 0xd, 0x2, 0xf, 0x3, 0xe, 0xa, 0x4, 0x9, 0x2, 0x1, 0x6, 0xe, 0x3, 0x8, 0x0, 0x6, 0xf, 0x6, 0x8, 0x9, 0x1, 0x1, 0x7, 0x7, 0x7, 0x7, 0x1, 0x6, 0xc, 0x5, 0xa, 0x3, 0xf, 0x5, 0x7, 0xf, 0x3, 0x9, 0xa, 0xd, 0x5, 0xa, 0xb],
    [0x9, 0x3, 0x2, 0xb, 0xe, 0x2, 0x3, 0xc, 0x9, 0x7, 0x2, 0xa, 0x0, 0x2, 0xd, 0x8, 0x7, 0x4, 0xc, 0x8, 0x9, 0x6, 0xc, 0x8, 0xb, 0xd, 0xd, 0x9, 0xf, 0x9, 0xe, 0x8, 0xf, 0x2, 0x5, 0xc, 0x7, 0x5, 0x9, 0x7, 0x2, 0x5, 0x5, 0xc, 0x7, 0x8, 0x5, 0xf, 0xe, 0xb, 0xb, 0x3, 0x6, 0xf, 0x3, 0x9, 0xf, 0x2, 0x1, 0xe, 0x6, 0x0, 0x4, 0x7],
    [0x2, 0xa, 0xf, 0x4, 0x3, 0x9, 0xc, 0xf, 0xf, 0xb, 0x9, 0x0, 0xa, 0x7, 0xe, 0x3, 0xc, 0xd, 0x4, 0x4, 0x9, 0xb, 0x9, 0x8, 0xb, 0x4, 0xe, 0x4, 0x1, 0x9, 0x8, 0x6, 0xc, 0x6, 0x2, 0xf, 0xe, 0xe, 0xe, 0xa, 0xc, 0x8, 0x9, 0x3, 0xe, 0x9, 0x4, 0x8, 0xf, 0x6, 0xd, 0x3, 0x9, 0xb, 0xc, 0xc, 0xb, 0xa, 0xe, 0xa, 0x8, 0x8, 0x2, 0xc],
    [0xb, 0x2, 0xc, 0xe, 0x7, 0x6, 0xf, 0xa, 0x9, 0x1, 0xb, 0x6, 0x5, 0x5, 0x2, 0x8, 0x1, 0x2, 0x8, 0xf, 0xc, 0x2, 0xf, 0x7, 0x5, 0xc, 0xb, 0x2, 0x1, 0x0, 0xd, 0x6, 0x2, 0x7, 0xd, 0xe, 0x1, 0xa, 0x6, 0x0, 0x4, 0x0, 0x5, 0xa, 0x9, 0x9, 0xf, 0xe, 0x6, 0x8, 0x0, 0x4, 0x9, 0xa, 0xd, 0xf, 0x2, 0x6, 0xc, 0xe, 0x6, 0x2, 0x9, 0x0],
    [0x9, 0x0, 0x1, 0x9, 0x9, 0xd, 0xb, 0xa, 0xc, 0xd, 0xb, 0xc, 0x4, 0xc, 0xd, 0x2, 0x7, 0xd, 0x8, 0x9, 0x0, 0x7, 0x8, 0xc, 0xb, 0x8, 0x8, 0x4, 0x8, 0x8, 0xc, 0x9, 0x5, 0x3, 0xe, 0x8, 0xa, 0xa, 0xf, 0xe, 0x4, 0x0, 0xf, 0x9, 0xf, 0xd, 0xf, 0x1, 0x4, 0x5, 0xa, 0xc, 0x4, 0x1, 0x2, 0x6, 0x8, 0x0, 0x7, 0xc, 0xe, 0x2, 0xb, 0xb],
    [0x1, 0xe, 0x9, 0xe, 0xd, 0xf, 0x3, 0x1, 0xb, 0xc, 0x7, 0x6, 0x7, 0x4, 0xa, 0xd, 0xd, 0x2, 0x3, 0xd, 0xc, 0x8, 0x6, 0x5, 0xf, 0x2, 0xb, 0x7, 0xe, 0x4, 0x5, 0x9, 0xf, 0xc, 0xe, 0x2, 0x8, 0x5, 0x5, 0xb, 0x7, 0x2, 0x5, 0x1, 0x6, 0x8, 0xb, 0x7, 0x0, 0x9, 0x2, 0x4, 0x6, 0x1, 0x9, 0x8, 0xb, 0x6, 0x7, 0xc, 0x2, 0x8, 0xb, 0xc],
    [0x3, 0x6, 0x5, 0xc, 0x9, 0x5, 0x1, 0xb, 0x8, 0xf, 0x9, 0x1, 0x5, 0x7, 0xc, 0x5, 0x9, 0x9, 0x7, 0x5, 0xf, 0xe, 0x4, 0xe, 0x2, 0xb, 0x2, 0xf, 0xe, 0x6, 0xd, 0x2, 0x0, 0x5, 0x5, 0x9, 0xe, 0x8, 0x9, 0x4, 0x5, 0xc, 0xc, 0x9, 0x5, 0x1, 0xf, 0x2, 0xd, 0x6, 0x6, 0xf, 0xa, 0x6, 0x0, 0x1, 0x8, 0x9, 0x1, 0x8, 0x1, 0x7, 0x0, 0x5],
    [0x6, 0xa, 0xe, 0x5, 0x4, 0xa, 0x5, 0x0, 0xa, 0x7, 0x3, 0x1, 0x2, 0x7, 0xb, 0x6, 0xe, 0x3, 0x8, 0x4, 0xb, 0x8, 0x2, 0x3, 0xc, 0xd, 0x5, 0xf, 0x7, 0x2, 0x7, 0x4, 0xc, 0x4, 0x9, 0x9, 0xd, 0xb, 0x4, 0x3, 0x5, 0x7, 0xa, 0xa, 0x9, 0x8, 0x4, 0x1, 0x3, 0x4, 0xf, 0xc, 0xb, 0x8, 0xd, 0x7, 0xa, 0x2, 0x2, 0x6, 0x3, 0xa, 0x1, 0xc],
    [0xa, 0xf, 0x2, 0x4, 0xa, 0xa, 0xb, 0x0, 0x1, 0xb, 0x4, 0x4, 0x4, 0xa, 0x3, 0xa, 0x8, 0xd, 0x1, 0x9, 0x5, 0x9, 0xa, 0x2, 0x0, 0x0, 0x0, 0x5, 0x1, 0xf, 0x6, 0x1, 0xb, 0x1, 0x5, 0x4, 0x4, 0x1, 0x1, 0xa, 0x9, 0x3, 0x1, 0x8, 0xd, 0x2, 0x6, 0xf, 0x3, 0xc, 0x9, 0xf, 0xc, 0x9, 0x0, 0x8, 0x9, 0xd, 0xc, 0x5, 0xa, 0x1, 0x5, 0xe],
    [0xa, 0x7, 0xc, 0x8, 0xd, 0x7, 0x1, 0xf, 0xf, 0x3, 0x2, 0xd, 0x3, 0x0, 0xc, 0x5, 0xd, 0xa, 0x2, 0x9, 0x7, 0x8, 0x7, 0xb, 0xc, 0x3, 0x7, 0xf, 0x7, 0xf, 0xa, 0xf, 0x3, 0xe, 0xc, 0x3, 0x0, 0x1, 0xd, 0xb, 0x0, 0xe, 0xe, 0x6, 0x6, 0x6, 0x2, 0x3, 0xd, 0x7, 0x3, 0xa, 0x4, 0x4, 0xc, 0xf, 0x0, 0xa, 0x5, 0x2, 0x2, 0x1, 0xf, 0xc],
    [0x8, 0xd, 0xb, 0x8, 0xe, 0xc, 0xc, 0x3, 0xb, 0x8, 0x5, 0x0, 0x4, 0x3, 0xe, 0xb, 0x2, 0xc, 0x0, 0x9, 0x2, 0xb, 0x3, 0x9, 0x3, 0x9, 0x3, 0xa, 0x5, 0x0, 0x1, 0xb, 0x2, 0x8, 0x6, 0xf, 0xe, 0x5, 0x1, 0x3, 0x3, 0xf, 0x2, 0xf, 0x1, 0x3, 0x1, 0x8, 0x2, 0xb, 0x2, 0x6, 0x2, 0xc, 0x3, 0xf, 0xd, 0x5, 0xf, 0xb, 0x0, 0xf, 0xf, 0xe],
    [0x8, 0x2, 0x4, 0xd, 0x3, 0x5, 0xb, 0x5, 0xf, 0x8, 0x3, 0x4, 0x3, 0xf, 0x8, 0x6, 0xf, 0xc, 0xb, 0x4, 0xc, 0x8, 0x5, 0x0, 0x1, 0x1, 0x3, 0xc, 0x7, 0xb, 0x1, 0xc, 0x5, 0x7, 0xc, 0x5, 0x0, 0x0, 0xc, 0xb, 0xe, 0x3, 0xc, 0x7, 0xd, 0x3, 0xd, 0xd, 0x5, 0x7, 0xc, 0x2, 0xf, 0xf, 0xf, 0xe, 0xa, 0xa, 0x4, 0x7, 0x2, 0xd, 0x7, 0x3],
    [0x2, 0x5, 0x5, 0xb, 0xf, 0x1, 0x7, 0xe, 0xf, 0x9, 0x9, 0x6, 0xb, 0x3, 0x7, 0xe, 0x6, 0xa, 0x2, 0x0, 0x3, 0x1, 0xf, 0xa, 0xe, 0xb, 0x3, 0xe, 0xb, 0xb, 0x5, 0x1, 0x7, 0x1, 0xd, 0xb, 0x7, 0xb, 0x3, 0xa, 0x9, 0xe, 0xd, 0xc, 0x2, 0x9, 0x9, 0xb, 0x1, 0xf, 0xc, 0x7, 0xb, 0x0, 0x6, 0x8, 0xa, 0xc, 0xf, 0x4, 0x1, 0xe, 0x6, 0x7],
    [0x1, 0x2, 0x3, 0xe, 0x3, 0xe, 0xf, 0x3, 0xc, 0xe, 0x4, 0x7, 0x8, 0xc, 0x1, 0x2, 0x7, 0x9, 0x2, 0x7, 0x5, 0x4, 0xb, 0x8, 0xf, 0xc, 0x9, 0x4, 0xb, 0xa, 0x3, 0x7, 0xd, 0xc, 0x7, 0x3, 0x3, 0x1, 0x4, 0x1, 0x5, 0xb, 0x0, 0xe, 0x1, 0xa, 0xd, 0x8, 0xf, 0xe, 0xf, 0x7, 0x0, 0xb, 0x4, 0x0, 0x0, 0x2, 0x5, 0x0, 0x0, 0x5, 0x8, 0x0],
    [0xf, 0xd, 0xe, 0x6, 0xa, 0x1, 0x7, 0x0, 0xa, 0x8, 0xb, 0xa, 0x8, 0x3, 0x4, 0x9, 0xa, 0x6, 0xf, 0x3, 0x6, 0x6, 0xf, 0x2, 0x6, 0xe, 0x5, 0xb, 0xd, 0xf, 0x1, 0xa, 0x4, 0x9, 0x7, 0x9, 0xc, 0x9, 0x4, 0xc, 0xa, 0x8, 0x8, 0x0, 0x0, 0xc, 0x4, 0x8, 0x7, 0x5, 0xd, 0x3, 0xe, 0xf, 0x6, 0xe, 0x3, 0x3, 0x1, 0x4, 0xf, 0xa, 0xc, 0x3],
    [0xc, 0xe, 0xc, 0xa, 0xb, 0x9, 0xb, 0x8, 0x5, 0xe, 0xf, 0x7, 0xb, 0x9, 0xf, 0xb, 0xe, 0x7, 0x7, 0x9, 0x2, 0xd, 0x7, 0x2, 0xc, 0x4, 0x3, 0xb, 0x1, 0x4, 0x4, 0xc, 0xc, 0xc, 0x1, 0xc, 0xa, 0xb, 0xc, 0x2, 0x4, 0xa, 0x3, 0x4, 0x0, 0x3, 0xc, 0x3, 0x8, 0xe, 0x0, 0x0, 0xd, 0x8, 0x7, 0x6, 0x3, 0x6, 0x1, 0x0, 0xb, 0x6, 0xb, 0xb]
];
